# @AylinRobot
#@MusicAzBot
# Repo A√ßƒ±ƒüdƒ±sa ƒ∞caz…ôsis G√∂t√ºrm…ô Oƒülum

import time
from asyncio import sleep
from time import time
from pyrogram.errors import FloodWait
from pyrogram.types import Message
from AylinRobot import AylinRobot as app
from AylinRobot.config import Config
from pyrogram import Client, filters
from pyrogram import Client, filters
from pyrogram.types import Message
import os
import asyncio
from pyrogram import enums
from pyrogram.enums import ChatMemberStatus
from pyrogram.errors import FloodWait



@app.on_message(filters.command('list') & filters.group)
async def start(client, msj):
    BOTLAR = []
    chat_id = msj.chat.id
    async for members in app.iter_chat_members(chat_id):
        botmu = members.user.is_bot
        if botmu == True:
            BOTLAR.append(members.user.mention)
            botlarsiyahi = '\n'.join(BOTLAR)
        else:
            pass

    botlarsiyahi = '\n'.join(BOTLAR)
    await client.send_message(chat_id, botlarsiyahi)
    
    
@app.on_message(filters.command("del") & filters.group)
async def delAcc(client, msg):
    await msg.reply("Silin…ôn Hesablar Axtarƒ±lƒ±r")
    await msg.delete()
    await msg.reply("Silin…ôn Hesablar G√∂nd…ôrilir")    
    await msg.delete()
    chat_id = msg.chat.id
    DELETED = []
    members = app.iter_chat_members(chat_id)
    async for m in members:
        if m.user.is_deleted == True:
            DELETED.append(str(m.user.id)) # silinen hesablar

    shesablar = '\n'.join(DELETED) 
    await app.send_message(chat_id, f"üôé‚Äç‚ôÄÔ∏è {Config.BOT_USERNAME} Silin…ôn Hesablarƒ± Tapdƒ± Silin…ôn Hesablar- üëª {len(DELETED)} {shesablar} üôã‚Äç‚ôÄÔ∏è Axtaran {msg.from_user.mention}")
    
@app.on_message(filters.command("bots"))
async def bots(client, message):  
  try:    
    botList = []
    async for bot in app.get_chat_members(message.chat.id, filter=enums.ChatMembersFilter.BOTS):
      botList.append(bot.user)
    lenBotList = len(botList) 
    text3  = f"** ô·¥è·¥õ  ü…™s·¥õ - {message.chat.title}**\n\nü§ñ  ô·¥è·¥õ\n"
    while len(botList) > 1:
      bot = botList.pop(0)
      text3 += f"‚îú @{bot.username}\n"    
    else:    
      bot = botList.pop(0)
      text3 += f"‚îî @{bot.username}\n\n"
      text3 += f"**·¥ä·¥ú·¥ç ü·¥Ä ú ·¥õ·¥è·¥õ·¥Ä ü  ô·¥è·¥õ**: {lenBotList}"  
      await client.send_message(message.chat.id, text3)
  except FloodWait as e:
    await asyncio.sleep(e.value)